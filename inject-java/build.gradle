import org.anarres.gradle.plugin.jarjar.JarjarTask

// this is a hack because of how we replace jarjar'ed JAR need to manually supply dependencies to POM
// Declare all dependencies in this map and not with the dependencies block!

def deps = [
        compile: [
                project(":inject")
        ]
]
ext.extraPomInfo = {
    delegate.dependencies {
        for(entry in deps) {
            def scope = entry.key
            def values = entry.value
            for(dep in values) {
                delegate.dependency {
                    def groupId
                    def artifactId
                    def artifactVersion

                    if(dep instanceof Project) {
                        groupId = projectGroupId
                        artifactId = dep.name
                        artifactVersion = version
                    }
                    else {

                        groupId = dep.group
                        artifactId = dep.name
                        artifactVersion = dep.version
                    }

                    delegate.groupId groupId
                    delegate.artifactId artifactId
                    delegate.version artifactVersion
                    delegate.scope scope
                }
            }
        }
    }

}

dependencies {
    for(entry in deps) {
        def scope = entry.key
        for(dep in entry.value) {
            "$scope"(dep)
        }
    }


    compileOnly project(":aop")
    compileOnly files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    compileOnly 'javax.validation:validation-api:2.0.0.Final'

    testCompile project(":aop")
    testCompile project(":runtime")
    testCompile "io.reactivex.rxjava2:rxjava:$rxJava2Version"
    testCompile "org.hibernate:hibernate-core:5.1.5.Final"
    testCompile 'org.hibernate:hibernate-validator:5.4.1.Final'
    testRuntime 'org.glassfish.web:el-impl:2.2.1-b05'
    testCompile "junit:junit:4.7"
    testCompile "com.google.testing.compile:compile-testing:0.12"
    testCompile 'org.mongodb:mongo-java-driver:3.6.1'
    testCompile 'org.neo4j.driver:neo4j-java-driver:1.4.5'
    testCompile "org.codehaus.groovy:groovy-json:$groovyVersion"
    testCompile files(org.gradle.internal.jvm.Jvm.current().toolsJar)

}

// This logic handles rewriting the dependencies on org.objectweb.asm.** to io.micronaut.asm.**

def targetDir = new File(project.buildDir, "jarjar")
def targetFile = new File(targetDir, "jarjar.jar")
def jarjarTask = task("jarjarTask", type: JarjarTask) {
    from(project.files(jar.archivePath))
    classRename "org.objectweb.asm.**", "io.micronaut.asm.@1"
    classRename "com.github.benmanes.caffeine.**", "io.micronaut.caffeine.@1"
    destinationDir = targetDir
    destinationName = targetFile.name
}
jarjarTask.dependsOn(jar)

def jarjarOutputs = task("jarjarOutputs").doLast {
    copy {
        from zipTree(jarjarTask.destinationPath)
        into(targetDir)
    }
    delete(jarjarTask.destinationPath)
}
jarjarOutputs.dependsOn(jarjarTask)
task("rejar", type:Jar, dependsOn: jarjarOutputs) {
    from(targetDir)
    archiveName = "rejar.jar"
}

