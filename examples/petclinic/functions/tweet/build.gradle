import jp.classmethod.aws.gradle.lambda.*
import com.amazonaws.services.lambda.model.*

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenLocal()

    }
    dependencies {
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.22"

    }
}

apply plugin:"groovy"
apply plugin: 'jp.classmethod.aws.lambda'
mainClassName = "example.function.tweet.UpdateStatusFunction"

dependencies {
    compileOnly "org.particleframework:inject-java:${projectVersion}"
    compile 'org.twitter4j:twitter4j-core:4.0.6'

    compile "org.particleframework:inject-groovy:${projectVersion}"
    compile "org.particleframework:function-groovy:${projectVersion}"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime 'org.apache.logging.log4j:log4j-slf4j-impl:2.9.1'


    testCompile "org.particleframework:http-client:${projectVersion}"
    testRuntime "org.particleframework:function-web:${projectVersion}"
    testRuntime "org.particleframework:http-server-netty:${projectVersion}"

    testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
        exclude module:'groovy-all'
    }

}

// NOTE: the AWS gradle plugin
task deploy(type: AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
    functionName = "twitter-update-status"
    handler = "example.function.tweet.UpdateStatusFunction::updateStatus"
    role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
    runtime = Runtime.Java8
    zipFile = shadowJar.archivePath
    memorySize = 256
    timeout = 60
}

task invokeFunction(type: AWSLambdaInvokeTask) {
    functionName = "twitter-update-status"
    invocationType = InvocationType.RequestResponse
    payload = '{"text:"Time is '+System.currentTimeMillis()+'"}'
    doLast {
        println "Lambda function result: " + new String(invokeResult.payload.array(), "UTF-8")
    }
}